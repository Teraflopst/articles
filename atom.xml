<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>one stark</title>
  <subtitle>走走停停，写写画画</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-04-23T03:08:46.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Hewenwei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git diff 命令详解</title>
    <link href="http://yoursite.com/2016/04/08/git-diff/"/>
    <id>http://yoursite.com/2016/04/08/git-diff/</id>
    <published>2016-04-08T07:54:58.000Z</published>
    <updated>2016-04-23T03:08:46.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;工作目录-vs-暂存区&quot;&gt;&lt;a href=&quot;#工作目录-vs-暂存区&quot; class=&quot;headerlink&quot; title=&quot;工作目录 vs 暂存区&quot;&gt;&lt;/a&gt;工作目录 vs 暂存区&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git diff &amp;lt;filename&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;意义：查看文件在工作目录与暂存区的差别。如果还没 add 进暂存区，则查看文件自身修改前后的差别。也可查看和另一分支的区别。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git diff &amp;lt;branch&amp;gt; &amp;lt;filename&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;暂存区-vs-Git仓库&quot;&gt;&lt;a href=&quot;#暂存区-vs-Git仓库&quot; class=&quot;headerlink&quot; title=&quot;暂存区 vs Git仓库&quot;&gt;&lt;/a&gt;暂存区 vs Git仓库&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git diff --cached &amp;lt;filename&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;意义：表示查看已经 add 进暂存区但是尚未 commit 的内容同最新一次 commit 时的内容的差异。 也可以指定仓库版本：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git diff --cached &amp;lt;commit&amp;gt; &amp;lt;filename&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;工作目录-vs-Git仓库&quot;&gt;&lt;a href=&quot;#工作目录-vs-Git仓库&quot; class=&quot;headerlink&quot; title=&quot;工作目录 vs Git仓库&quot;&gt;&lt;/a&gt;工作目录 vs Git仓库&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git diff &amp;lt;commit&amp;gt; &amp;lt;filename&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;意义：查看工作目录同Git仓库指定 commit 的内容的差异。&lt;br&gt;&lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;=&lt;code&gt;HEAD&lt;/code&gt; 时：查看工作目录同最近一次 commit 的内容的差异。&lt;/p&gt;
&lt;h3 id=&quot;Git仓库-vs-Git仓库&quot;&gt;&lt;a href=&quot;#Git仓库-vs-Git仓库&quot; class=&quot;headerlink&quot; title=&quot;Git仓库 vs Git仓库&quot;&gt;&lt;/a&gt;Git仓库 vs Git仓库&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git diff &amp;lt;commit&amp;gt; &amp;lt;commit&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;意义：Git仓库任意两次 commit 之间的差别。&lt;/p&gt;
&lt;h3 id=&quot;扩展：&quot;&gt;&lt;a href=&quot;#扩展：&quot; class=&quot;headerlink&quot; title=&quot;扩展：&quot;&gt;&lt;/a&gt;扩展：&lt;/h3&gt;&lt;p&gt;以上命令可以不指定 &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt;，则对全部文件操作。&lt;br&gt;以上命令涉及和 Git仓库 对比的，均可指定 commit 的版本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HEAD&lt;/code&gt; 最近一次 commit&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HEAD^&lt;/code&gt;  上次提交&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HEAD~100&lt;/code&gt; 上100次提交&lt;/li&gt;
&lt;li&gt;每次提交产生的哈希值&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;最佳实践&quot;&gt;&lt;a href=&quot;#最佳实践&quot; class=&quot;headerlink&quot; title=&quot;最佳实践&quot;&gt;&lt;/a&gt;最佳实践&lt;/h3&gt;&lt;p&gt;准备工作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新建文件 test.txt；&lt;/li&gt;
&lt;li&gt;追踪文件：git add test.txt；&lt;/li&gt;
&lt;li&gt;首次提交：git commit -m “Create file test.txt”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开始测试：&lt;/p&gt;
&lt;p&gt;1、修改文件内容，例如添加一行“000”&lt;br&gt;2、查看修改：git diff test.txt&lt;/p&gt;
&lt;p&gt;此时由于没有向暂存区暂存此修改，此时作用是查看工作目录文件的修改。&lt;/p&gt;
&lt;p&gt;3、提交一次：git commit -m “add line 000”&lt;br&gt;4、修改文件内容，例如添加一行“111”&lt;br&gt;5、暂存此次修改：git add test.txt，不作 commit&lt;br&gt;6、再次修改文件夹内容，例如添加一行“222”&lt;br&gt;7、查看修改：git diff test.txt&lt;/p&gt;
&lt;p&gt;此时查看文件在工作目录（222）与暂存区（111）的差别。&lt;/p&gt;
&lt;p&gt;其它命令自行测试。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;工作目录-vs-暂存区&quot;&gt;&lt;a href=&quot;#工作目录-vs-暂存区&quot; class=&quot;headerlink&quot; title=&quot;工作目录 vs 暂存区&quot;&gt;&lt;/a&gt;工作目录 vs 暂存区&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>获取 Dropbox 共享文件外链</title>
    <link href="http://yoursite.com/2016/04/07/get-dropbox-external-link/"/>
    <id>http://yoursite.com/2016/04/07/get-dropbox-external-link/</id>
    <published>2016-04-07T03:46:38.000Z</published>
    <updated>2016-04-07T14:04:57.000Z</updated>
    
    <content type="html">&lt;p&gt;Dropbox 过去在共享文件后，可以方便地获取共享文件的外链地址。在本地客户端对共享文件右键选择 &lt;code&gt;Copy Public Link&lt;/code&gt; 即可获取形如 &lt;code&gt;https://dl.dropboxusercontent.com/s/sample.mp3&lt;/code&gt; 这样的外链地址。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可惜现在已经不能按以前的方法获得文件的外链地址，现在客户端已经取消了获取分享文件 &lt;code&gt;Public Link&lt;/code&gt; 的功能。取而代之的是得到 &lt;code&gt;https://www.dropbox.com/s/ejobxyjrm7p66hd/apps_large.png?dl=0&lt;/code&gt; 这样的链接，这是一条共享链接，不能作为外链使用。&lt;/p&gt;
&lt;p&gt;为了获取共享文件的外链，可以把得到的共享链接按照过去的外链形式修改，即把&lt;br&gt;&lt;code&gt;https://www.dropbox.com&lt;/code&gt; 部分替换为 &lt;code&gt;https://dl.dropboxusercontent.com&lt;/code&gt;，再去除文件后缀名之后的字段即可。&lt;/p&gt;
&lt;p&gt;不得不说，这样获取外链的方式很麻烦，即使可以编写一些脚本批量处理，也不建议依赖 Dropbox 的外链，但临时用一下还是可以的。你保不准哪天连这个方法都失效了。&lt;/p&gt;
&lt;p&gt;题外：过去 Dropbox 共享文件夹还有一个独特的 user ID 可以获取，现在也已经取消了，这令很多较早时期利用  Dropbox API 开发的实用工具都失效了。不能说这几年的 Dropbox 在退步，但是它的发展是看得出来的艰难，企业级覆盖不是对手 Box 的一个量级，个人消费市场各种云服务遍地开花，Google、微软、苹果等的云服务和各自的主打服务接入程度高，体验好，价格也不贵，国内市场就更不言而喻了:)。Dropbox 曾经主打的增量同步功能的优势不再明显，又关闭了高价收购的邮件应用 Mailbox 和没什么特色的相片管理服务 Carousel，现在个人消费者市场也已经没什么可以作为，进军企业级市场比 Box 慢了这么多，也没什么好肉可以吃了。&lt;/p&gt;
&lt;p&gt;记得在 Dropbox 成立之初时，乔布斯就曾提议 9 位数收购它，并说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dropbox 是一项功能，而非产品。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://www.dropboxforum.com/hc/en-us/community/posts/204505105-How-to-i-find-my-public-folder-unique-user-id-&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to i find my public folder unique user id?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://aptonic.com/dropzone/destinations/help/dropbox.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dropzone：Dropbox setup instructions&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Dropbox 过去在共享文件后，可以方便地获取共享文件的外链地址。在本地客户端对共享文件右键选择 &lt;code&gt;Copy Public Link&lt;/code&gt; 即可获取形如 &lt;code&gt;https://dl.dropboxusercontent.com/s/sample.mp3&lt;/code&gt; 这样的外链地址。&lt;br&gt;
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
      <category term="cloud" scheme="http://yoursite.com/tags/cloud/"/>
    
      <category term="dropbox" scheme="http://yoursite.com/tags/dropbox/"/>
    
  </entry>
  
  <entry>
    <title>使用 aria2 加速百度云下载</title>
    <link href="http://yoursite.com/2016/03/07/baiduyun-download-faster/"/>
    <id>http://yoursite.com/2016/03/07/baiduyun-download-faster/</id>
    <published>2016-03-07T12:50:42.000Z</published>
    <updated>2016-04-12T11:22:15.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;aria2 is a lightweight multi-protocol &amp;amp; multi-source command-line download utility. It supports HTTP/HTTPS, FTP, SFTP, BitTorrent and Metalink.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;浏览器默认下载器下载百度云的文件速度大多不理想，非客户端下载限速，大文件下载中途失败，让人体验非常不友好。Windows 平台独享百度云管家下载工具，大文件的上下传速度都比较理想，Mac 平台的同步盘功能少，体验差，直到配合下载工具 &lt;code&gt;aria2&lt;/code&gt; 下载速度和大文件下载才有所改善。下面是几步简单的教程。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;请首先自行安装 &lt;code&gt;Homebrew&lt;/code&gt;。Homebrew 安装 &lt;code&gt;aria2&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install aria2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h2&gt;&lt;p&gt;aria2 有两种常用模式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直接命令行下载 模式&lt;/li&gt;
&lt;li&gt;RPC server 模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;直接命令行下载模式直接使用命令行进行下载任务，但不推荐使用这种方法。推荐使用  &lt;code&gt;RPC server&lt;/code&gt; 模式，这种方式 aria 启动之后只会安静的等待下载请求，下载完成后也只会安静的驻留后台不会自动退出。而使用 RPC 模式推荐做一个配置文件方便使用。&lt;/p&gt;
&lt;p&gt;我们把配置文件放在 &lt;code&gt;~/.aria2&lt;/code&gt; 文件夹下，依次输入命令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mkdir .aria2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; .aria2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ touch aria2.conf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，&lt;code&gt;.aria2&lt;/code&gt; 文件夹是隐藏的。可以打开 Finder，利用 &lt;code&gt;Shift + ⌘ + G&lt;/code&gt; 进入路径：&lt;code&gt;~/.aria2/aria2.conf&lt;/code&gt;，用文本编辑器打开 &lt;code&gt;aria2.conf&lt;/code&gt;，参考以下配置修改。建议修改的地方有两处：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载文件保存路径。用户名填写本机当前用户名。&lt;/li&gt;
&lt;li&gt;最后一行。如果是 SSD 则不用改，如果是传统硬盘，就改成 &lt;code&gt;file-allocation=prealloc&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#允许rpc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;enable-rpc=true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#允许非外部访问&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rpc-listen-all=true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#RPC端口, 仅当默认端口被占用时修改&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rpc-listen-port=6800&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#最大同时下载数(任务数), 路由建议值: 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max-concurrent-downloads=10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#断点续传&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;continue=true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#同服务器连接数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max-connection-per-server=10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;min-split-size=10M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#单文件最大线程数, 路由建议值: 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;split=10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#下载速度限制&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max-overall-download-limit=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#单文件速度限制&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max-download-limit=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#上传速度限制&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max-overall-upload-limit=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#单文件速度限制&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max-upload-limit=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#文件保存路径, 默认为当前启动位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dir=/Users/用户名/Downloads&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#允许所有来源, web界面跨域权限需要&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rpc-allow-origin-all=true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#文件预分配, 能有效降低文件碎片, 提高磁盘性能. 缺点是预分配时间较长&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#所需时间 none &amp;lt; falloc ? trunc &amp;lt;&amp;lt; prealloc, falloc和trunc需要文件系统和内核支持&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# !!仅针对传统磁盘，SSD 降低文件碎片并不是什么好事。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file-allocation=none&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h2&gt;&lt;h4 id=&quot;直接下载&quot;&gt;&lt;a href=&quot;#直接下载&quot; class=&quot;headerlink&quot; title=&quot;直接下载&quot;&gt;&lt;/a&gt;直接下载&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;直接下载&lt;/strong&gt; 模式不需要上面的配置文件，使用命令行即可执行任务，当完成后就退出。例如：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ aria2c http://example.org/mylinux.iso&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ aria2c http://example.org/mylinux.torrent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ aria2c &lt;span class=&quot;string&quot;&gt;&#39;magnet:?xt=urn:btih:248D0A1CD08288C...&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更多用例，请访问官网 &lt;a href=&quot;https://aria2.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Usage Examples&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;RPC&quot;&gt;&lt;a href=&quot;#RPC&quot; class=&quot;headerlink&quot; title=&quot;RPC&quot;&gt;&lt;/a&gt;RPC&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;RPC server 模式&lt;/strong&gt; 启动后等待从 RPC 接口添加任务，下载完也不退出。每次开机均执行一次命名开启 RPC server 模式即可。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ aria2c --conf-path=&lt;span class=&quot;variable&quot;&gt;$&amp;#123;HOME&amp;#125;&lt;/span&gt;/.aria2/aria2.conf -D&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中 &lt;code&gt;--conf-path=&lt;/code&gt; 后面的路径为你定义的 &lt;code&gt;aria2.conf&lt;/code&gt; 配置文件路径。&lt;code&gt;${HOME}&lt;/code&gt; 表示 &lt;code&gt;/Users/用户名&lt;/code&gt;，&lt;code&gt;-D&lt;/code&gt; 为参数，这两处不用修改。&lt;/p&gt;
&lt;p&gt;命令执行完后是没有提示的，但这就说明 aria2 启动了。&lt;/p&gt;
&lt;p&gt;另外，如果觉得命令不好记忆，亦可以为命令设置别名。打开终端，执行以下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;alias aria2rpc=&#39;aria2c --conf-path=&lt;span class=&quot;variable&quot;&gt;$&amp;#123;HOME&amp;#125;&lt;/span&gt;/.aria2/aria2.conf -D&#39;&quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bash_profile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再执行此条命令重载配置令刚才命令生效。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; ~/.bash_profile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;要查看自定义的 alias 命令，直接在终端中输入 &lt;code&gt;alias&lt;/code&gt; 即可查看。&lt;/p&gt;
&lt;p&gt;以后需要使用开启 RPC server，只需在 bash 中输入 &lt;code&gt;aria2rpc&lt;/code&gt; 即可。如果提示 “command not found”，那么先执行一下上面的 &lt;code&gt;source&lt;/code&gt; 命令，再尝试。&lt;/p&gt;
&lt;p&gt;使用上面的命令开启 &lt;strong&gt;RPC server 模式&lt;/strong&gt; 后，aria 值守后台，再配合图形界面工具使用。&lt;/p&gt;
&lt;h4 id=&quot;图形界面&quot;&gt;&lt;a href=&quot;#图形界面&quot; class=&quot;headerlink&quot; title=&quot;图形界面&quot;&gt;&lt;/a&gt;图形界面&lt;/h4&gt;&lt;p&gt;aria2 是一个命令行工具，为了方便，有几种图形界面工具可以配合使用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;网页 UI&lt;br&gt; 使用网页 UI 需要先开启 RPC server 模式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;YAAW&lt;br&gt;打开网页 &lt;a href=&quot;http://binux.github.io/yaaw/demo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Yet Another Aria2 Web Frontend&lt;/a&gt;&lt;br&gt;点右上角的扳手按钮，修改 JSON-RPC Path 内容为 &lt;code&gt;http://127.0.0.1:6800/jsonrpc&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;另一个网页 UI：&lt;a href=&quot;http://ziahamza.github.io/webui-aria2/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Aria2 WebUI&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GUI 客户端&lt;br&gt; 下载 &lt;a href=&quot;https://github.com/yangshun1029/aria2gui/releases&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;aria2gui&lt;/a&gt;。默认 JSON-RPC 为 &lt;code&gt;http://localhost:6800/jsonrpc&lt;/code&gt;，不需要修改。使用时按 &lt;code&gt;+Add&lt;/code&gt; 或 &lt;code&gt;+添加&lt;/code&gt; 按钮，输入 HTTP、FTP 或 Magnet 进行下载。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果嫌每次复制粘贴链接麻烦，浏览器有 &lt;code&gt;百度网盘助手&lt;/code&gt; 等插件，可以在百度云网页生成 &lt;code&gt;导出下载&lt;/code&gt; 按钮，点击 &lt;code&gt;ARIA2 RPC&lt;/code&gt; 即可自动在打开的 YAAW 网页或 GUI 客户端上进行下载。aria 还支持迅雷离线、旋风离线、115 网盘等下载，也有相应的浏览器插件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/baiduexporter/mjaenbjdjmgolhoafkohbhhbaiedbkno&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chrome 插件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://raw.githubusercontent.com/acgotaku/BaiduExporter/master/firefox/baidu-exporter.xpi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Firefox 插件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://aria2.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;aria2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blog.binux.me/2012/12/aria2-examples/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;aria2 配置示例 - Binuxの杂货铺&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://sspai.com/32167&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mac 上使用百度网盘很烦躁？花点时间配置 aria2 吧&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;aria2 is a lightweight multi-protocol &amp;amp; multi-source command-line download utility. It supports HTTP/HTTPS, FTP, SFTP, BitTorrent and Metalink.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;浏览器默认下载器下载百度云的文件速度大多不理想，非客户端下载限速，大文件下载中途失败，让人体验非常不友好。Windows 平台独享百度云管家下载工具，大文件的上下传速度都比较理想，Mac 平台的同步盘功能少，体验差，直到配合下载工具 &lt;code&gt;aria2&lt;/code&gt; 下载速度和大文件下载才有所改善。下面是几步简单的教程。&lt;br&gt;
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="aria2" scheme="http://yoursite.com/tags/aria2/"/>
    
      <category term="cloud" scheme="http://yoursite.com/tags/cloud/"/>
    
      <category term="download" scheme="http://yoursite.com/tags/download/"/>
    
  </entry>
  
  <entry>
    <title>移动前端开之像素、viewport 的理解</title>
    <link href="http://yoursite.com/2016/01/23/pixels-viewport/"/>
    <id>http://yoursite.com/2016/01/23/pixels-viewport/</id>
    <published>2016-01-23T01:19:42.000Z</published>
    <updated>2016-04-23T02:52:40.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;知识&quot;&gt;&lt;a href=&quot;#知识&quot; class=&quot;headerlink&quot; title=&quot;知识&quot;&gt;&lt;/a&gt;知识&lt;/h2&gt;&lt;h3 id=&quot;CSS-像素、物理像素、PPI&quot;&gt;&lt;a href=&quot;#CSS-像素、物理像素、PPI&quot; class=&quot;headerlink&quot; title=&quot;CSS 像素、物理像素、PPI&quot;&gt;&lt;/a&gt;CSS 像素、物理像素、PPI&lt;/h3&gt;&lt;h4 id=&quot;CSS-像素&quot;&gt;&lt;a href=&quot;#CSS-像素&quot; class=&quot;headerlink&quot; title=&quot;CSS 像素&quot;&gt;&lt;/a&gt;CSS 像素&lt;/h4&gt;&lt;p&gt;&lt;code&gt;CSS像素&lt;/code&gt; 是 Web 编程的概念，本质上是为我们 Web 开发者创建的一个抽象结构，是相对的而不是绝对的。&lt;/p&gt;
&lt;h4 id=&quot;物理像素&quot;&gt;&lt;a href=&quot;#物理像素&quot; class=&quot;headerlink&quot; title=&quot;物理像素&quot;&gt;&lt;/a&gt;物理像素&lt;/h4&gt;&lt;p&gt;&lt;code&gt;物理像素&lt;/code&gt; 是物理概念，屏幕是由很多像素点组成的，各像素点通过发出不同颜色的光来呈现屏幕的色彩。它是物理的，随着设备生产出来就已经被确定下来了，比如 iPhone4 的屏幕分辨率为 640×960，就表示屏幕的横向有640个像素点，纵向有960个像素点。&lt;/p&gt;
&lt;h4 id=&quot;PPI&quot;&gt;&lt;a href=&quot;#PPI&quot; class=&quot;headerlink&quot; title=&quot;PPI&quot;&gt;&lt;/a&gt;PPI&lt;/h4&gt;&lt;p&gt;PPI（Pixels Per Inch）表示单位面积上的物理像素点数目。分辨率可以表示屏幕包含的像素数目，但要想描述屏幕的显示质量，还需要知道屏幕尺寸，最后算出单位面积上的像素点数目。显然PPI越高，屏幕显示效果越细腻。&lt;/p&gt;
&lt;p&gt;想要解释 &lt;code&gt;CSS像素&lt;/code&gt; 和 &lt;code&gt;设备像素&lt;/code&gt; 的关系也很简单，想想 PC 浏览器网页上的缩放。如果用户进行放大操作，一个拥有 &lt;code&gt;width: 300px&lt;/code&gt; 的元素将会占有屏幕越来越多的空间，以设备（物理）像素进行度量的话就会变得越来越宽。但对于 CSS 像素来说，无论怎样，宽度的值还是 &lt;code&gt;300px&lt;/code&gt;，缩放效果是通过尽可能的对 CSS 像素进行拉伸来实现的。&lt;/p&gt;
&lt;p&gt;平时电脑屏幕的 1px CSS 像素对应 1px 物理像素，所以感觉不到两者的区别，会让你误以为CSS 里的 &lt;code&gt;px&lt;/code&gt; 就是实际屏幕像素。而真实情况是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当缩放比例为 100% 时（不缩放），1px CSS 像素对应屏幕物理像素 1px；&lt;/li&gt;
&lt;li&gt;当缩放比例大于 100% 时（放大），1px CSS 像素对应大于 1px 的屏幕物理像素；&lt;/li&gt;
&lt;li&gt;当缩放比例小于 100% 时（缩小），1px CSS 像素对应小于 1px 的屏幕物理像素。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下来的两幅图说明了当用户缩放的时候会发生什么。第一幅图展示的是当用户进行缩小操作的时候设备像素（深蓝色背景）和 CSS 像素（半透明前景）的样子。CSS 像素变得小了；一个设备像素覆盖了多个 CSS 像素。第二幅图展示的当用户进行放大操作时候设备像素和CSS像素的样子。一个CSS 像素现在覆盖了多个设备像素。（图左：放大网页，图右：缩小网页）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/media/csspixels_in_out.png&quot; alt=&quot;csspixels_in_out&quot; title=&quot;title&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;逻辑像素、设备像素比&quot;&gt;&lt;a href=&quot;#逻辑像素、设备像素比&quot; class=&quot;headerlink&quot; title=&quot;逻辑像素、设备像素比&quot;&gt;&lt;/a&gt;逻辑像素、设备像素比&lt;/h3&gt;&lt;p&gt;过去 iPhone 3gs 分辨率是 320x480，和平时电脑屏幕一样，1px CSS 像素对应 1px 物理像素，开发者开发网页时只要写上 CSS 像素 &lt;code&gt;width:320px, height:480px&lt;/code&gt; 即可。但是，面对同样屏幕尺寸的 iPhone 4/4s，分辨率提升到 640x960，难道要另外为它写一份网页文档设置 CSS 像素 &lt;code&gt;width:640px, height:960px&lt;/code&gt; 来适配高分辨率吗，显然这是不实际的。如果继续使用旧的网页文件，在高分辨率的设备上，就会显得很小，比如在分辨率为 320×480 的 iPhone 3GS 上，要画一条长度 1 英寸的线条，假设需要 163 个物理像素，即CSS像素设成 163 像素即可；但是在分辨率为 640×960 的 iPhone4/4s 上，163 CSS 像素所在手机表示实际长度只有 iPhone3GS 的一半，即 0.5 英寸。如果照这种方式显示，3GS 上刚刚好的效果，在 4/4s 上就会小到根本看不清了。&lt;/p&gt;
&lt;p&gt;而在现实中，这两者效果却是一样的！这是因为 Retina 屏幕把 2x2 个像素当 1 个像素使用。比如原本 44 像素高的顶部导航栏，在 Retina 屏上用了 88 个像素的高度来显示。如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/media/iphone3_4.png&quot; alt=&quot;iphone3_4&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;逻辑像素&quot;&gt;&lt;a href=&quot;#逻辑像素&quot; class=&quot;headerlink&quot; title=&quot;逻辑像素&quot;&gt;&lt;/a&gt;逻辑像素&lt;/h4&gt;&lt;p&gt;这里提出&lt;code&gt;逻辑像素&lt;/code&gt;的概念。苹果使用了一套逻辑坐标系统来解决多分辨率屏幕适配问题，&lt;br&gt;例如：4/4s 的逻辑像素设为 320x480 &lt;strong&gt;points&lt;/strong&gt; ，即物理屏幕上左上角为原点，横向为 X 轴 320 points，纵向为 Y 轴 480 points，名为 point (即pt) 单位就是上图中的深灰色部分，显然，PPI 越高的屏幕，1 point 覆盖的物理像素就越多。Android 平台也定义了逻辑像素单位，为&lt;code&gt;device-independent pixel&lt;/code&gt; 即 dip 或 dp。说实话，两者其实是一回事。&lt;/p&gt;
&lt;h4 id=&quot;设备像素比&quot;&gt;&lt;a href=&quot;#设备像素比&quot; class=&quot;headerlink&quot; title=&quot;设备像素比&quot;&gt;&lt;/a&gt;设备像素比&lt;/h4&gt;&lt;p&gt;设备像素比(devicePixelRatio) = 物理像素 / dp或pt。例如：&lt;br&gt;iPhone 4/4s 设备像素比：640 / 320 = 2&lt;/p&gt;
&lt;p&gt;单位之间的换算关系：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1倍：1pt=1dp=1px（iPhone 3GS）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2倍：1pt=1dp=2px（iPhone 4s/5/6）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3倍：1pt=1dp=3px（iPhone 6 plus）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;应用&quot;&gt;&lt;a href=&quot;#应用&quot; class=&quot;headerlink&quot; title=&quot;应用&quot;&gt;&lt;/a&gt;应用&lt;/h2&gt;&lt;h3 id=&quot;CSS-和-图片&quot;&gt;&lt;a href=&quot;#CSS-和-图片&quot; class=&quot;headerlink&quot; title=&quot;CSS 和 图片&quot;&gt;&lt;/a&gt;CSS 和 图片&lt;/h3&gt;&lt;p&gt;对于开发者，实际应用中应该根据屏幕尺寸和 devicePixelRatio 来反推 CSS pixel。&lt;/p&gt;
&lt;p&gt;也就是说：假设设备像素比为 2，设计图要做成了 720x1280 的，那么 CSS 里所有尺寸都除以 2 即可。&lt;/p&gt;
&lt;p&gt;而对于图片，比如一张实际大小 100x100px 的图片，并且 width 和 height 都设了 100px(注意这里的px是css pixel)，实际占用了屏幕的像素数就是(假设设备像素比是3) 300x300px (注意这里的 px 是真实的屏幕像素) 所以，如果希望网页的元素在高 PPI 设备上显示不模糊(比如 1080x1920 屏幕的手机)，位图应该做 3 倍的尺寸 (比如做 300x300px 的图，然后在 CSS 中设 width 和 height 为 100px)，svg(矢量图)就无所谓了。&lt;/p&gt;
&lt;h3 id=&quot;媒体查询&quot;&gt;&lt;a href=&quot;#媒体查询&quot; class=&quot;headerlink&quot; title=&quot;媒体查询&quot;&gt;&lt;/a&gt;媒体查询&lt;/h3&gt;&lt;p&gt;注意这里的 px 是指逻辑像素，即 CSS 文件中的 width、height。&lt;br&gt;&lt;code&gt;max-width&lt;/code&gt; 和 &lt;code&gt;max-device-width&lt;/code&gt; 都可以使用。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@media all and (max-device-width: 320px) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;viewport&quot;&gt;&lt;a href=&quot;#viewport&quot; class=&quot;headerlink&quot; title=&quot;viewport&quot;&gt;&lt;/a&gt;viewport&lt;/h2&gt;&lt;p&gt;别以为当我们为了适配手机端的问题，而特意根据屏幕尺寸和 devicePixelRatio 来反推 CSS pixel，就可以在手机端上优雅地显示网页了，手机浏览器又涉及到有关 viewport 的概念。这里介绍一下 layout viewport 和 visual viewport。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;layout viewport - 为了更好渲染页面所需要的尺寸&lt;/li&gt;
&lt;li&gt;visual viewport - 浏览器可视区域尺寸&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;layout-viewport&quot;&gt;&lt;a href=&quot;#layout-viewport&quot; class=&quot;headerlink&quot; title=&quot;layout viewport&quot;&gt;&lt;/a&gt;layout viewport&lt;/h3&gt;&lt;p&gt;移动设备上的浏览器认为自己必须能让所有的网站都正常显示，即使是那些不是为移动设备设计的网站。但如果以浏览器的可视区域作为 viewport 的话，因为移动设备的屏幕都不是很宽，所以那些为桌面浏览器设计的网站放到移动设备上显示时，必然会因为移动设备的 viewport 太窄，而挤作一团，甚至布局什么的都会乱掉。所以这些浏览器就决定默认情况下把 viewport 设为一个较宽的值，比如 980px，这样的话即使是那些为桌面设计的网站也能在移动浏览器上正常显示了。ppk 把这个浏览器默认的 viewport 叫做 layout viewport。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/media/layoutviewport.png&quot; alt=&quot;layoutviewport&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;visual-viewport&quot;&gt;&lt;a href=&quot;#visual-viewport&quot; class=&quot;headerlink&quot; title=&quot;visual viewport&quot;&gt;&lt;/a&gt;visual viewport&lt;/h3&gt;&lt;p&gt;layout viewport 的宽度是大于浏览器可视区域的宽度的，所以我们还需要一个 viewport 来代表浏览器可视区域的大小，ppk 把这个 viewport 叫做 visual viewport。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/media/visualviewport.png&quot; alt=&quot;visualviewport&quot;&gt;&lt;/p&gt;
&lt;p&gt;拿 iPhone 举例。&lt;br&gt;iPhone 创建出了一个 980px 的虚拟窗口——布局窗口(layout viewport)来对页面布局，这时传统的桌面端网页终于能正常布局了(虽然要放大才能看清)，但正是这个 layout viewport 导致专门根据屏幕尺寸和 devicePixelRatio 优化过的页面也只能以缩放的方式显示(可以想象在你的 PC 浏览器宽 980px 窗口里打开一个 320px 的页面的情景…)，那么为了让为移动设备优化过的网页正常显示，就要改变这个 layout viewport。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0, user-scalable=no&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;布局窗口定义为：宽度为设备宽度，初始缩放比例为1倍，禁止用户缩放。&lt;/p&gt;
&lt;h2 id=&quot;参考：&quot;&gt;&lt;a href=&quot;#参考：&quot; class=&quot;headerlink&quot; title=&quot;参考：&quot;&gt;&lt;/a&gt;参考：&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.quirksmode.org/blog/archives/2010/04/a_pixel_is_not.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ppk: A pixel is not a pixel is not a pixel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.w3cplus.com/css/A-pixel-is-not-a-pixel-is-not-a-pixel.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;W3cplus 译：此像素非彼像素&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://weizhifeng.net/a-pixel-is-not.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JeremyWei 译：不是像素的像素不是像素&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/2050/p/3877280.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;移动前端开发之viewport的深入理解&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://colachan.com/post/3435&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;移动端尺寸基础知识&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.zhangxinxu.com/wordpress/2012/08/window-devicepixelratio/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;张鑫旭：设备像素比devicePixelRatio简单介绍&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://screensiz.es/phone&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SCREENSIZ.ES&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pic3.zhimg.com/9d9467e5f217fe707ce6d03aa1cd6ca6_r.jpg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iPhone 分辨率终极指南&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;知识&quot;&gt;&lt;a href=&quot;#知识&quot; class=&quot;headerlink&quot; title=&quot;知识&quot;&gt;&lt;/a&gt;知识&lt;/h2&gt;&lt;h3 id=&quot;CSS-像素、物理像素、PPI&quot;&gt;&lt;a href=&quot;#CSS-像素、物理像素、PPI&quot; class=&quot;headerlink&quot; ti
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>区别 px、em、rem</title>
    <link href="http://yoursite.com/2015/08/23/px-em-rem/"/>
    <id>http://yoursite.com/2015/08/23/px-em-rem/</id>
    <published>2015-08-23T02:50:48.000Z</published>
    <updated>2016-04-23T03:46:15.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;有何差别&quot;&gt;&lt;a href=&quot;#有何差别&quot; class=&quot;headerlink&quot; title=&quot;有何差别&quot;&gt;&lt;/a&gt;有何差别&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;px&lt;/code&gt; 在缩放页面时无法调整那些使用它作为单位的字体、按钮等的大小；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;em&lt;/code&gt; 的值并不是固定的，会继承父级元素的字体大小，代表倍数；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rem&lt;/code&gt; 的值并不是固定的，始终是基于根元素 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 的，也代表倍数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;em&quot;&gt;&lt;a href=&quot;#em&quot; class=&quot;headerlink&quot; title=&quot;em&quot;&gt;&lt;/a&gt;em&lt;/h3&gt;&lt;p&gt;em 的使用是相对于其父级的字体大小的，即倍数。浏览器的默认字体高都是 16px，未经调整的浏览器显示 1em = 16px。但是有一个问题，如果设置 1.2em 则变成 19.2px，问题是 px 表示大小时数值会忽略掉小数位的（你想像不出来半个像素吧）。而且 1em = 16px 的关系不好转换，因此，常常人为地使 1em = 10px。这里要借助字体的 &lt;code&gt;%&lt;/code&gt; 来作为桥梁。&lt;/p&gt;
&lt;p&gt;因为默认时字体 16px = 100%，则有 10px = 62.5%。所以首先在 body 中全局声明 font-size=62.5%=10px，也就是定义了网页 body 默认字体大小为 10px，由于 em 有继承父级元素字体大小的特性，如果某元素的父级没有设定字体大小，那么它就继续了 body 默认字体大小 1em = 10px。&lt;/p&gt;
&lt;p&gt;但是由于 em 是相对于其父级字体的倍数的，当出现有多重嵌套内容时，使用 em 分别给它们设置字体的大小往往要重新计算。比如说你在父级中声明了字体大小为 1.2em，那么在声明子元素的字体大小时设置 1em 才能和父级元素内容字体大小一致，而不是1.2em（避免 1.2*1.2=1.44em）, 因为此 em 非彼 em。再举个例子：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;Outer &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;inner&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt; outer&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;body &amp;#123; font-size: 62.5%; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;span &amp;#123; font-size: 1.6em; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果：外层 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 为 body 字体 10px 的 1.6倍 = 16px，内层 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 为外层内容字体 16px 的 1.6倍 = 25px（或26px，不同浏览器取舍小数不同）。&lt;/p&gt;
&lt;p&gt;明显地，内部 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 内的文字受到了父级 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 的影响。基于这点，在实际使用中给我们的计算带来了很大的不便。&lt;/p&gt;
&lt;h3 id=&quot;rem&quot;&gt;&lt;a href=&quot;#rem&quot; class=&quot;headerlink&quot; title=&quot;rem&quot;&gt;&lt;/a&gt;rem&lt;/h3&gt;&lt;p&gt;引述 MDN:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;rem&lt;/strong&gt; values are relative to the root html element, not the parent element.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;rem 的出现再也不用担心还要根据父级元素的 font-size 计算 em 值了，因为它始终是基于根元素（&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;）的。&lt;br&gt;比如默认的 html font-size=16px，那么想设置 12px 的文字就是：12÷16=0.75(rem)&lt;br&gt;仍然是上面的例子，CSS改为：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;html&lt;/span&gt; &amp;#123; &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;62.5%&lt;/span&gt;; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt; &amp;#123; &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;16px&lt;/span&gt;; &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1.6rem&lt;/span&gt;; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果：内外 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 的内容均为 16px。&lt;/p&gt;
&lt;p&gt;需要注意的是，为了兼容不支持 rem 的浏览器，我们需要在各个使用了 rem 地方前面写上对应的 px 值，这样不支持的浏览器可以优雅降级。&lt;a href=&quot;http://caniuse.com/#feat=rem&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;兼容性详情&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;选择使用什么字体单位主要由你的项目来决定，如果你的用户群都使用最新版的浏览器，那推荐使用 rem，如果要考虑兼容性，那就使用 px，或者两者同时使用。&lt;/p&gt;
&lt;p&gt;完。&lt;/p&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ued.taobao.org/blog/2013/05/rem-font-size/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;淘宝UED：响应式十日谈第一日：使用 rem 设置文字大小&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/font-size&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN: font-size&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;有何差别&quot;&gt;&lt;a href=&quot;#有何差别&quot; class=&quot;headerlink&quot; title=&quot;有何差别&quot;&gt;&lt;/a&gt;有何差别&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;px&lt;/code&gt; 在缩放页面时无法调整那些使用它作为单位的字体、按钮等的大小；&lt;/li&gt;
&lt;li&gt;
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>HTML5 中 div、section、article 的区别</title>
    <link href="http://yoursite.com/2015/04/23/HTML_structural_elements/"/>
    <id>http://yoursite.com/2015/04/23/HTML_structural_elements/</id>
    <published>2015-04-23T00:29:04.000Z</published>
    <updated>2016-04-23T00:41:31.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;lt-div-gt&quot;&gt;&lt;a href=&quot;#lt-div-gt&quot; class=&quot;headerlink&quot; title=&quot;&amp;lt;div&amp;gt;&quot;&gt;&lt;/a&gt;&amp;lt;div&amp;gt;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element has no special meaning at all.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;要点&lt;/strong&gt;：无语义，最后考虑。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;除非没有合适的标签可以使用，否则使用 div 会缺乏可读性。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配合 class、lang、title 等属性使用（赋予可读性），标记一块区域的内容。&lt;/p&gt;
&lt;p&gt;  例如进行样式、视觉的处理。常用的比如使用 div 包含并使用 CSS 对网页在浏览器窗口的位置进行居中，或者给整个网页设置背景（图片）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我更偏向于把 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 元素理解为 &lt;code&gt;division&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;lt-section-gt&quot;&gt;&lt;a href=&quot;#lt-section-gt&quot; class=&quot;headerlink&quot; title=&quot;&amp;lt;section&amp;gt;&quot;&gt;&lt;/a&gt;&amp;lt;section&amp;gt;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; element represents a generic section of a document or application.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;要点&lt;/strong&gt;：有主题性地分组。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;对 &lt;code&gt;内容&lt;/code&gt; 按 &lt;strong&gt;主题&lt;/strong&gt; 分组：文章的章回、论文中编号的节、标签对话框的多个标签页等。&lt;/p&gt;
&lt;p&gt;  在文章、论文中，对内容进行主题性的分组（通常会包含标题），例如划分章节。一个简单的评判标准：这个元素的内容体现在文章大纲 (outline) 中时，用 &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; 是合适的。&lt;/p&gt;
&lt;p&gt;  &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; 也适合在一个标签式对话框中对各种标签页面进行分组。&lt;/p&gt;
&lt;p&gt;  当一个标签只是为了样式化或者方便脚本使用时，应该使用 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;网站页面中可以用 &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; 把它划分为网站介绍、主题内容、新闻、联系信息等部分。&lt;/p&gt;
&lt;p&gt;  其实也是对网站的页面内容按主题分组。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;lt-article-gt&quot;&gt;&lt;a href=&quot;#lt-article-gt&quot; class=&quot;headerlink&quot; title=&quot;&amp;lt;article&amp;gt;&quot;&gt;&lt;/a&gt;&amp;lt;article&amp;gt;&lt;/h3&gt;&lt;p&gt;可以说，&lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; 是一个特殊的 &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; element represents an independent item section of content.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;要点&lt;/strong&gt;：可以单独发布、重用的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;论坛帖子&lt;/li&gt;
&lt;li&gt;新闻、杂志的文章&lt;/li&gt;
&lt;li&gt;博客文章  &lt;a href=&quot;https://www.w3.org/wiki/HTML/Elements/article#Example_A&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;例子A&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;用户提交的评论  &lt;a href=&quot;https://www.w3.org/wiki/HTML/Elements/article#Example_B&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;例子B&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;lt-article-gt-还是-lt-section-gt&quot;&gt;&lt;a href=&quot;#lt-article-gt-还是-lt-section-gt&quot; class=&quot;headerlink&quot; title=&quot;&amp;lt;article&amp;gt; 还是 &amp;lt;section&amp;gt; ?&quot;&gt;&lt;/a&gt;&amp;lt;article&amp;gt; 还是 &amp;lt;section&amp;gt; ?&lt;/h3&gt;&lt;p&gt;阅读&lt;a href=&quot;https://www.w3.org/TR/html5/sections.html#article-or-section?&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;的举例，就能有一个大致的判断。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/html5/sections.html#the-article-element&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The article element - W3C Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/html5/sections.html#the-section-element&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The section element - W3C Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/html5/sections.html#article-or-section?&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Article or section? - W3C Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/wiki/HTML_structural_elements#.3Caside.3E&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML structural elements - W3C Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/wiki/HTML/Elements/section&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML/Elements/section - W3C Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/wiki/HTML/Elements/article&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML/Elements/article - W3C Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://justineo.github.io/slideshows/semantic-html/#/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Semantic HTML&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;lt-div-gt&quot;&gt;&lt;a href=&quot;#lt-div-gt&quot; class=&quot;headerlink&quot; title=&quot;&amp;lt;div&amp;gt;&quot;&gt;&lt;/a&gt;&amp;lt;div&amp;gt;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;div&amp;gt;&lt;/co
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>用新浪微博相册打造一个图床</title>
    <link href="http://yoursite.com/2015/01/31/sina-img-bed/"/>
    <id>http://yoursite.com/2015/01/31/sina-img-bed/</id>
    <published>2015-01-31T14:30:29.000Z</published>
    <updated>2016-04-06T08:33:18.000Z</updated>
    
    <content type="html">&lt;p&gt;新浪微博相册图片支持外链，速度快，免费。用新浪微博相册可以为博客、写作平台打造一个免费的图床。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1、登录 &lt;a href=&quot;http://weibo.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;新浪微博&lt;/a&gt;，进入我的相册，或登录 &lt;a href=&quot;http://photo.weibo.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微相册&lt;/a&gt;；&lt;br&gt;2、上传图片至某专辑，最好勾选 &lt;code&gt;上传原图&lt;/code&gt;；&lt;br&gt;3、获取外链：点击图片-查看大图-右键图片复制图片链接，得到如下链接：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http://ww1.sinaimg.cn/large/sample.jpg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此为尺寸最大的图片外链。其实图片在上传时会上传到几台服务器上，同时会生成几张不同尺寸的图片，常用的有以下几种形式：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http://ww1.sinaimg.cn/thumbnail/sample.jpg   // 缩略图&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http://ww1.sinaimg.cn/small/sample.jpg       // 稍微大点的图&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http://ww1.sinaimg.cn/bmiddle/sample.jpg     // 再大点的图&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http://ww1.sinaimg.cn/large/sample.jpg       // 最大的&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其它尺寸可以通过修改链接地址中的 &lt;code&gt;thumbnail&lt;/code&gt;、&lt;code&gt;samll&lt;/code&gt;、&lt;code&gt;bmiddle&lt;/code&gt;、&lt;code&gt;large&lt;/code&gt; 来获取。&lt;/p&gt;
&lt;p&gt;最后，要说的一点是，新浪微博哪天取消图片外链的功能，就会造成很大的麻烦了，因为这种用户自己发掘的特殊用途并得不到任何官方保障和承诺。虽然免费，但是就长远来说，数据的可控和安全性更重要，因此，寻找一个可靠的外链服务商才是最令人放心的。&lt;/p&gt;
&lt;p&gt;免费的代价可能是高昂的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;新浪微博相册图片支持外链，速度快，免费。用新浪微博相册可以为博客、写作平台打造一个免费的图床。&lt;br&gt;
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
    
      <category term="image-hosting" scheme="http://yoursite.com/tags/image-hosting/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 使用指导</title>
    <link href="http://yoursite.com/2015/01/28/hexo-tutorial/"/>
    <id>http://yoursite.com/2015/01/28/hexo-tutorial/</id>
    <published>2015-01-28T14:24:55.000Z</published>
    <updated>2016-04-06T10:46:59.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;新建&quot;&gt;&lt;a href=&quot;#新建&quot; class=&quot;headerlink&quot; title=&quot;新建&quot;&gt;&lt;/a&gt;新建&lt;/h2&gt;&lt;p&gt;Hexo 使用 &lt;code&gt;new&lt;/code&gt; 指令来新建&lt;strong&gt;文章&lt;/strong&gt;、&lt;strong&gt;草稿&lt;/strong&gt;和&lt;strong&gt;页面&lt;/strong&gt;这三种默认layout布局。其中layout 是可选参数，默认值为 post。用户可以通过&lt;a href=&quot;#models&quot;&gt;布局模板&lt;/a&gt;来修改或增加。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new 布局 &lt;span class=&quot;string&quot;&gt;&quot;文章名&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;布局&lt;/th&gt;
&lt;th&gt;解释&lt;/th&gt;
&lt;th&gt;路径&lt;/th&gt;
&lt;th&gt;注释&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;post&lt;/td&gt;
&lt;td&gt;文章&lt;/td&gt;
&lt;td&gt;source/_posts&lt;/td&gt;
&lt;td&gt;新建一个文章文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;draft&lt;/td&gt;
&lt;td&gt;草稿&lt;/td&gt;
&lt;td&gt;source/_drafts&lt;/td&gt;
&lt;td&gt;新建一个草稿文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page&lt;/td&gt;
&lt;td&gt;页面&lt;/td&gt;
&lt;td&gt;source&lt;/td&gt;
&lt;td&gt;新建一个页面文件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注意：页面文件需要在主题的 &lt;code&gt;_config.yml&lt;/code&gt; 中配置才能显示出来。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阅读更多：写作&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;布局模板&quot;&gt;&lt;a href=&quot;#布局模板&quot; class=&quot;headerlink&quot; title=&quot;布局模板&quot;&gt;&lt;/a&gt;&lt;span id=&quot;models&quot;&gt;布局模板&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;layout 布局模板放在 &lt;code&gt;scaffolds/&lt;/code&gt; 目录下，文件名称就是 layout 名称。每次新建时，Hexo 会尝试在 scaffolds 文件夹中寻找同名文件，并根据其内容建立文章。所以可以在这里添加自己的 layout，作为常用的新建模板使用。&lt;br&gt;同时你也可以编辑现有的 layout，比如 post 的 layout 默认是 scaffolds\post.md&lt;/p&gt;
&lt;p&gt;这里有一份文章配置信息，可以根据情况修改后作为模板复用，或直接在保存文章的路径新建.md文件中使用：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: 文章名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2013-05-29 07:56:29  #发表日期&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;updated: 2016-04-06 14:58:03  #更新日期&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;categories: Life  #文章分类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags: [tag1,tag2]  #文章标签，多标签时使用英文逗号隔开&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;photos:  #如果使用Fancybox（文章头部展示图片），如此设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- URL1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- URL2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#从这里开始&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#就是正文&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#使用markdown&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/models.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阅读更多：数据模型信息&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;调试和部署&quot;&gt;&lt;a href=&quot;#调试和部署&quot; class=&quot;headerlink&quot; title=&quot;调试和部署&quot;&gt;&lt;/a&gt;调试和部署&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo clean #清除静态页面缓存（清除 public 文件夹）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo g #在本地生成静态页面（生成 public 文件夹）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo s #启动本地服务 http://localhost:4000，进行预览调试&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo d #远程部署，同步到 GitHub&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果出现问题，最好先使用 &lt;code&gt;$ hexo clean&lt;/code&gt; 来清除 Hexo 的缓存。最后使用组合命令 &lt;code&gt;$ hexo d -g&lt;/code&gt; 远程部署网站。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;扩展阅读:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ibruce.info/2013/11/22/hexo-your-blog/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo 你的博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo 中文文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;新建&quot;&gt;&lt;a href=&quot;#新建&quot; class=&quot;headerlink&quot; title=&quot;新建&quot;&gt;&lt;/a&gt;新建&lt;/h2&gt;&lt;p&gt;Hexo 使用 &lt;code&gt;new&lt;/code&gt; 指令来新建&lt;strong&gt;文章&lt;/strong&gt;、&lt;strong&gt;草稿&lt;/strong&gt;和&lt;strong&gt;页面&lt;/strong&gt;这三种默认layout布局。其中layout 是可选参数，默认值为 post。用户可以通过&lt;a href=&quot;#models&quot;&gt;布局模板&lt;/a&gt;来修改或增加。&lt;/p&gt;
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>配置 Git for Mac</title>
    <link href="http://yoursite.com/2015/01/28/setting-git-for-mac/"/>
    <id>http://yoursite.com/2015/01/28/setting-git-for-mac/</id>
    <published>2015-01-27T16:03:46.000Z</published>
    <updated>2016-04-06T08:34:07.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;下载安装-Git-for-Mac&quot;&gt;&lt;a href=&quot;#下载安装-Git-for-Mac&quot; class=&quot;headerlink&quot; title=&quot;下载安装 Git for Mac&quot;&gt;&lt;/a&gt;下载安装 Git for Mac&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://git-scm.com/downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;git-scm.com&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;3-步配置-Git&quot;&gt;&lt;a href=&quot;#3-步配置-Git&quot; class=&quot;headerlink&quot; title=&quot;3 步配置 Git&quot;&gt;&lt;/a&gt;3 步配置 Git&lt;/h2&gt;&lt;p&gt;1、Sets the default name for git to use when you commit&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git config --global user.name &lt;span class=&quot;string&quot;&gt;&quot;Your Name Here&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、Sets the default email for git to use when you commit&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git config --global user.email &lt;span class=&quot;string&quot;&gt;&quot;your_email@example.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;3、在上述设置完毕后，可通过这两条命令查看自己的设置&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git config user.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git config user.email&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;创建仓库&quot;&gt;&lt;a href=&quot;#创建仓库&quot; class=&quot;headerlink&quot; title=&quot;创建仓库&quot;&gt;&lt;/a&gt;创建仓库&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;远程&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 Github.com 上创建一个repository（例：Hello-World）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;本地&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、在本地的~/目录下创建一个 git 仓库，目录创建在别处也可以&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mkdir ~/Hello-World&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、切换至刚创建好的目录&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/Hello-World&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3、初始化一个本地的 git仓库，生成隐藏的.git目录&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;添加&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、Creates a file called “README” in your Hello-World directory（也可以添加.txt .md .html等格式后缀）,找到后可打开编辑。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ touch README&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、Stages your README file, adding it to the list of files to be committed（把README文件添加到仓库中）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git add README&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3、Commits your files, adding the message “first commit”（执行提交说明）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git commit -m &lt;span class=&quot;string&quot;&gt;&#39;first commit&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;提交&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、Creates a remote named “origin” pointing at your GitHub repository（使用https协议指定、连接远程仓库地址）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git remote add origin https://github.com/username/Hello-World.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、Sends your commits in the “master” branch to GitHub（推送本地仓库到远程指定的master主分支上）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git push origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/create-a-repo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考一&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_858820890101939b.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考二&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/duxinfeng2010/article/details/8654690&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考三&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;下载安装-Git-for-Mac&quot;&gt;&lt;a href=&quot;#下载安装-Git-for-Mac&quot; class=&quot;headerlink&quot; title=&quot;下载安装 Git for Mac&quot;&gt;&lt;/a&gt;下载安装 Git for Mac&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;git-scm.com&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;3-步配置-Git&quot;&gt;&lt;a href=&quot;#3-步配置-Git&quot; class=&quot;headerlink&quot; title=&quot;3 步配置 Git&quot;&gt;&lt;/a&gt;3 步配置 Git&lt;/h2&gt;&lt;p&gt;1、Sets the default name for git to use when you commit&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git config --global user.name &lt;span class=&quot;string&quot;&gt;&quot;Your Name Here&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、Sets the default email for git to use when you commit&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git config --global user.email &lt;span class=&quot;string&quot;&gt;&quot;your_email@example.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Coding" scheme="http://yoursite.com/categories/Coding/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="mac" scheme="http://yoursite.com/tags/mac/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
</feed>
